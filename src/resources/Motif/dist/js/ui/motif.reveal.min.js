/*!
 * Motif Reveal v2.2.0
 * Show and hide things with class(es)
 *
 * Reveal accepts single or multiple IDs of target elements and, on click or 
 * hover, adds and removes classes from those target elements as well as the 
 * triggering element. It can group "reveals" so that you can dictate whether 
 * multiple targets can be active at the same time.
 *
 * Reveal keeps track of all these triggers and targets and states by creating
 * a "reference" in a `window.Reveal` object. You can see a model of that
 * reference at the bottom of this file. This allows us to be able to track
 * and manipulate these reveals outside of this plugin. In future development,
 * we will also be able to guarantee that targets of multiple reveals and 
 * groups will retain their appropriate state.
 * 
 * http://getmotif.com
 * 
 * @author Jonathan Pacheco <jonathan@lifeblue.com>
 */
!function(a,b,c,d,e){"use strict";var f=function(b){this.$elem=a(b),this.elem=this.$elem[0]},g=a(c);f.counter=0,f.animationFrame="function"==typeof b.requestAnimFrame?!0:!1,f.prototype={defaults:{trigger:"click",type:"default",target:"data-reveal",activeClass:"is-current",visitedClass:"is-visited",hoverIntent:null,onInit:null,beforeReveal:null,onShow:null,onHide:null,returns:!1},newReferenceTarget:function(a){return{elem:a,targets:[],fors:[],hide:[],current:!1}},newReferenceGroup:function(){return{type:this.options.type,triggers:[]}},init:function(a){return this.initVars.call(this,a),this.createReference.call(this),this.bindCallbacks.call(this),this.bindTrigger.call(this),this.bindTargets.call(this),this.initTrigger.call(this),f.counter+=1,g.trigger("reveal/"+this.identity+"/init"),this},initVars:function(b){this.identity=this.$elem.attr("id")||"reveal-target-"+f.counter,this.group=this.$elem.attr("data-reveal-group")||!1,this.reference=!1,this.config=b,this.metadata=this.$elem.data("reveal-options"),this.options=a.extend(!0,{},this.defaults,this.config,this.metadata)},createReference:function(){b.Reveal||(b.Reveal={triggers:{},groups:{},queue:[]})},bindCallbacks:function(){var a=this;"function"==typeof a.options.onInit&&g.on("reveal/"+a.identity+"/init",function(){a.options.onInit.call(a,a.$elem)}),"function"==typeof a.options.onShow&&g.on("reveal/"+a.identity+"/after/show",function(){a.options.onShow.call(a,a.$elem)}),"function"==typeof a.options.onHide&&g.on("reveal/"+a.identity+"/after/hide",function(){a.options.onHide.call(a,a.$elem)})},bindTrigger:function(){var b=this;"click"===b.options.trigger?b.$elem.on("click",function(){return b.processBeforeTrigger.call(b),b.options.returns}):"hover"===b.options.trigger&&(a.fn.hoverIntent&&b.options.hoverIntent?b.$elem.hoverIntent({sensitivity:b.options.hoverIntent.sensitivity,interval:b.options.hoverIntent.interval,over:function(){b.processBeforeTrigger.call(b)},timeout:b.options.hoverIntent.timeout,out:function(){b.processBeforeTrigger.call(b)}}):b.$elem.on({mouseenter:function(){b.processBeforeTrigger.call(b)},mouseleave:function(){b.processBeforeTrigger.call(b)}}))},getAction:function(){return this.reference.current===!0?"radio"===this.options.type?!1:"hide":"show"},processBeforeTrigger:function(){var a=this,b=a.getAction.call(a);b&&("function"==typeof this.options.beforeReveal?this.promiseBeforeTrigger(this.options.beforeReveal,b).done(function(){a.processTrigger.call(a,b)}).fail(function(){return!1}):this.processTrigger(b))},processTrigger:function(a){"show"===a?this.publish.call(this):"hide"===a&&this.unpublish.call(this)},publish:function(){var c=this,d=[];c.group&&"default"!==c.options.type&&(d=c.getCurrent.call(c,b.Reveal.groups[c.group].triggers),a.each(d,function(a,b){c.unpublish.call(c,b)})),g.trigger("reveal/"+this.identity+"/show")},unpublish:function(a){var b=a||this.identity;g.trigger("reveal/"+b+"/hide")},bindTargets:function(){var a=this;g.on("reveal/"+a.identity+"/show",function(){a.showSequence.call(a)}),g.on("reveal/"+a.identity+"/hide",function(){a.hideSequence.call(a)})},promiseBeforeTrigger:function(b,c){var d=new a.Deferred;return b.call(this,this.$elem,c,d),d.promise()},showSequence:function(){g.trigger("reveal/"+this.identity+"/before/show"),this.makeCurrent(),this.showTrigger(),this.showTargets(),this.showFors(),g.trigger("reveal/"+this.identity+"/after/show")},hideSequence:function(){g.trigger("reveal/"+this.identity+"/before/hide"),this.unmakeCurrent(),this.hideTrigger(),this.hideTargets(),this.hideFors(),g.trigger("reveal/"+this.identity+"/after/hide")},initCurrent:function(){"true"===this.$elem.attr("data-reveal-current")&&this.setCurrent()},setCurrent:function(){this.group?b.Reveal.queue.push(this.identity):(this.makeCurrent(),this.publish())},executeQueue:function(){var c=b.Reveal.queue;c.length&&a.each(c,function(a,b){g.trigger("reveal/"+c[a]+"/show")}),b.Reveal.queue=[],g.trigger("reveal/queue/done")},makeCurrent:function(){this.updateReference.call(this,{current:!0})},unmakeCurrent:function(){this.updateReference.call(this,{current:!1})},getCurrent:function(c){var d=b.Reveal.triggers,e=[];return a.each(c,function(a,b){d[c[a]].current&&e.push(c[a])}),e},initTrigger:function(){var a=this;this.updateReference.call(this,{targets:this.gatherTargets.call(this),fors:this.gatherForTriggers.call(this),hide:this.gatherHideTriggers.call(this)}),a.initCurrent.call(a)},gatherTargets:function(){var b,c;return this.options.target.constructor===Array&&this.options.target.length?c=this.options.target:"function"==typeof this.options.target?c=this.options.target:(b=this.$elem.attr(this.options.target).split(" "),c=[],a.each(b,function(d,e){var f=a("#"+b[d]);f.length||(f=function(){var c=a("#"+b[d]);return c.length?c:!1}),c.push(f)})),c},gatherForTriggers:function(){var b=this,c=a("[data-reveal-for='"+this.identity+"']"),d=[];return a.each(c,function(a,e){b.bindFors.call(b,c[a]),d.push(c[a])}),d},bindFors:function(b){var c=this;a(b).on("click",function(){return c.$elem.trigger("click"),!1})},gatherHideTriggers:function(){var b=this,c=a("[data-reveal-hide='"+this.identity+"']"),d=[];return a.each(c,function(a,e){b.bindHides.call(b,c[a]),d.push(c[a])}),d},bindHides:function(b){var c=this;a(b).on("click",function(){return c.reference.current&&"radio"!==c.options.type&&c.$elem.trigger("click"),!1})},gatherGroup:function(){var b=this.$elem.data("reveal-group");this.$group=b?a("[data-reveal-group='"+b+"']"):!1},addClass:function(a,b){f.animationFrame?requestAnimFrame(function(){a.addClass(b)}):a.addClass(b)},removeClass:function(a,b){f.animationFrame?requestAnimFrame(function(){a.removeClass(b)}):a.removeClass(b)},show:function(a){this.addClass(a,this.options.activeClass)},showTargets:function(){var b=this,c="function"==typeof b.reference.targets?b.reference.targets.call(b):b.reference.targets;a.each(c,function(){b.show.call(b,this)})},showFors:function(){var b=this,c=b.reference.fors;a.each(c,function(){b.show.call(b,a(this))})},showTrigger:function(){this.show.call(this,this.$elem)},hide:function(a){this.removeClass(a,this.options.activeClass),a.hasClass(this.options.visitedClass)||this.addClass(a,this.options.visitedClass)},hideTargets:function(){var b=this,c="function"==typeof b.reference.targets?b.reference.targets.call(b):b.reference.targets;a.each(c,function(){b.hide.call(b,this)})},hideFors:function(){var b=this,c=b.reference.fors;a.each(c,function(){b.hide.call(b,a(this))})},hideTrigger:function(){this.hide.call(this,this.$elem)},updateReference:function(c){var d=this,e=c||{},f=b.Reveal,g=d.group?f.groups[d.group]:!1,h=f.triggers[d.identity];return d.group&&(g?-1===a.inArray(d.identity,g.triggers)&&g.triggers.push(d.identity):(f.groups[d.group]=d.newReferenceGroup.call(d),f.groups[d.group].triggers.push(d.identity))),h?a.extend(!0,h,e):f.triggers[this.identity]=a.extend(!0,{},this.newReferenceTarget.call(this,this.$elem),e),this.reference=f.triggers[this.identity],this.reference}},f.defaults=f.prototype.defaults,d.apps.Reveal=f,a.fn.reveal=function(b){var c=this,d=arguments,e=this.length;return e?this.each(function(g){var h=a.data(this,"reveal");if(h)if("undefined"==typeof b||"object"==typeof b)h.init(b);else{if("string"==typeof b&&"function"==typeof h[b])return d=Array.prototype.slice.call(d,1),h[b].apply(h,d);console.log("Reveal: Method "+arg+" does not exist on jQuery.")}else d=Array.prototype.slice.call(d),h=a.data(this,"reveal",new f(this)),h.init.apply(h,d);e-1===g&&h.executeQueue.call(c)}):void 0}}(jQuery,window,document,window.Motif=window.Motif||{utils:{},apps:{}});